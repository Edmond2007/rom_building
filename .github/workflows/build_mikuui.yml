name: Build Miku UI (Vampire_v3)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  CCACHE_DIR: /tmp/ccache
  USE_CCACHE: 1
  SWAP_SIZE: 8G
  REPO_MIRRORS: |
    https://mirrors.tuna.tsinghua.edu.cn/git-repo
    https://gerrit-googlesource.proxy.ustclug.org/git-repo
    https://git-repo-archive.proxy.ustclug.org
  BUILD_TIME: $(date +'%Y-%m-%d %H:%M:%S')

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 400

    steps:
      # 1. Настройка окружения
      - name: Setup environment
        run: |
          # Настройка SWAP
          sudo fallocate -l $SWAP_SIZE /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          
          # Установка зависимостей
          sudo apt-get update -y
          sudo apt-get install -y \
            ccache git-core python3 python-is-python3 \
            libssl-dev libncurses5-dev curl openssh-client \
            bc bison flex zip unzip

      # 2. Установка repo через альтернативные зеркала
      - name: Install repo tool (mirror)
        run: |
          mkdir -p ~/bin
          for mirror in $REPO_MIRRORS; do
            echo "Пробуем зеркало: $mirror"
            if curl -sLf "$mirror" > ~/bin/repo; then
              chmod +x ~/bin/repo
              echo "$HOME/bin" >> $GITHUB_PATH
              echo "Успешно загружено с: $mirror"
              ~/bin/repo --version
              break
            fi
          done
          [ -f ~/bin/repo ] || { echo "Все зеркала недоступны"; exit 1; }

      # 3. Инициализация репозитория
      - name: Initialize repo
        run: |
          git config --global user.name "Edmond2007"
          git config --global user.email "edmondseropyan6@gmail.com"
          
          # Альтернативные URL для манифеста
          ~/bin/repo init \
            -u https://github.com/Miku-UI/manifesto \
            -b Vampire_v3 \
            --repo-url=https://gerrit-googlesource.proxy.ustclug.org/git-repo \
            --depth=1

      # 4. Синхронизация кода
      - name: Sync code
        run: |
          ~/bin/repo sync \
            -c \
            -j$(($(nproc --all) / 2)) \  # Уменьшаем нагрузку
            --force-sync \
            --no-clone-bundle \
            --no-tags \
            --optimized-fetch

      # 5. Применение device tree
      - name: Apply device trees
        run: |
          git clone \
            --depth=1 \
            https://github.com/Edmond2007/android_device_xiaomi_blossom_local_manifests.git \
            .repo/local_manifests
          
          ~/bin/repo sync \
            -c \
            -j$(($(nproc --all) / 2)) \
            --fail-fast

      # 6. Сборка прошивки
      - name: Build ROM
        run: |
          export CCACHE_COMPRESS=1
          ccache -M 100G
          source build/envsetup.sh
          lunch miku_blossom-userdebug
          mka bacon -j$(($(nproc --all) - 2))

      # 7. Уведомления и артефакты
      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Miku-UI-Vampire_v3
          path: out/target/product/blossom/*.zip

      - name: Cleanup
        if: always()
        run: |
          sudo swapoff /swapfile || true
          sudo rm -f /swapfile || true
