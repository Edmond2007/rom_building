name: Build Miku UI (Vampire_v3) - With SWAP

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  CCACHE_DIR: /tmp/ccache
  USE_CCACHE: 1
  SWAP_SIZE: 8G  # Размер swap-файла (рекомендую 4-8GB для AOSP)

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Set up SWAP
        run: |
          sudo fallocate -l ${{ env.SWAP_SIZE }} /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show  # Проверка
          free -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ccache git-core python3 python-is-python3 libssl-dev

      - name: Initialize Miku UI
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH
          repo init -u https://github.com/Miku-UI/manifesto -b Vampire_v3
          repo sync -c -j$(nproc --all)

      - name: Apply device trees
        run: |
          git clone https://github.com/Edmond2007/android_device_xiaomi_blossom_local_manifests.git .repo/local_manifests
          repo sync -c -j$(nproc --all)

      - name: Build ROM
        run: |
          ccache -M 100G
          source build/envsetup.sh
          lunch miku_blossom-userdebug
          mka bacon -j$(($(nproc --all) - 1))

      - name: Clean up SWAP
        if: always()  # Выполняется даже при ошибке
        run: |
          sudo swapoff /swapfile
          sudo rm -f /swapfile

      - name: Upload ROM
        uses: actions/upload-artifact@v4
        with:
          name: Miku-UI-Vampire_v3-blossom
          path: out/target/product/blossom/*.zip
