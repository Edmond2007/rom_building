name: Build Miku UI (Vampire_v3)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  CCACHE_DIR: /tmp/ccache
  USE_CCACHE: 1
  SWAP_SIZE: 8G

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 400

    steps:
      # 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
      - name: Setup environment
        run: |
          sudo fallocate -l $SWAP_SIZE /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h
          
          sudo apt-get update -y
          sudo apt-get install -y \
            ccache git-core python3 python-is-python3 \
            libssl-dev libncurses5-dev curl openssh-client \
            bc bison flex zip unzip lzop pkg-config

      # 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ repo (—Å–∏—Å—Ç–µ–º–Ω–∞—è)
      - name: Install repo system-wide
        run: |
          sudo curl -o /usr/local/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo
          repo --version

      # 3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–±–æ—Ä–∫–∏
      - name: Telegram Build Start
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ *–°–±–æ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞*
            ‚ñ´Ô∏è *–ü—Ä–æ—à–∏–≤–∫–∞:* Miku UI Vampire_v3
            ‚ñ´Ô∏è *–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:* Redmi 9C NFC (blossom)
            ‚ñ´Ô∏è *–ó–∞–ø—É—â–µ–Ω–æ:* $(date -u +"%Y-%m-%dT%H:%M:%SZ")
            ‚ñ´Ô∏è *–°—Å—ã–ª–∫–∞:* [View](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          parse_mode: markdown

      # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Initialize repo
        run: |
          git config --global user.name "Edmond2007"
          git config --global user.email "edmondseropyan6@gmail.com"
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
          repo init \
            -u https://github.com/Miku-UI/manifesto \
            -b Vampire_v3 \
            --depth=1 || { echo "Repo init failed"; exit 1; }

      # 5. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞
      - name: Sync code
        run: |
          repo sync \
            -c \
            -j$(($(nproc --all) / 2)) \
            --force-sync \
            --no-clone-bundle \
            --no-tags \
            --optimized-fetch || { echo "Repo sync failed"; exit 1; }

      # 6. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ device tree
      - name: Apply device trees
        run: |
          git clone \
            --depth=1 \
            https://github.com/Edmond2007/android_device_xiaomi_blossom_local_manifests.git \
            .repo/local_manifests || { echo "Cloning device trees failed"; exit 1; }
          
          repo sync \
            -c \
            -j$(($(nproc --all) / 2)) \
            --fail-fast || { echo "Final repo sync failed"; exit 1; }

      # 7. –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∫–∏
      - name: Start timer
        id: timer
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      # 8. –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏
      - name: Build ROM
        run: |
          export CCACHE_COMPRESS=1
          ccache -M 50G
          ccache -s
          
          source build/envsetup.sh || { echo "Env setup failed"; exit 1; }
          lunch miku_blossom-userdebug || { echo "Lunch failed"; exit 1; }
          mka bacon -j$(($(nproc --all) - 2)) || { echo "Build failed"; exit 1; }

      # 9. –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–±–æ—Ä–∫–∏
      - name: Calculate duration
        id: duration
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - ${{ env.START_TIME }}))
          echo "DURATION_MIN=$((DURATION / 60))" >> $GITHUB_ENV
          echo "DURATION_SEC=$((DURATION % 60))" >> $GITHUB_ENV

      # 10. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
      - name: Telegram Build Result
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.event_name == 'workflow_dispatch' && 'üöÄ *–†—É—á–Ω–∞—è —Å–±–æ—Ä–∫–∞*' || 'üöÄ *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞*' }}
            ${{ success() && '‚úÖ *–°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞*' || failure() && '‚ùå *–°–±–æ—Ä–∫–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞*' || '‚ö†Ô∏è *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å*' }}
            ‚ñ´Ô∏è *–ü—Ä–æ—à–∏–≤–∫–∞:* Miku UI Vampire_v3
            ‚ñ´Ô∏è *–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:* blossom
            ‚ñ´Ô∏è *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* ${{ env.DURATION_MIN }} –º–∏–Ω. ${{ env.DURATION_SEC }} —Å–µ–∫.
            ‚ñ´Ô∏è *–†–µ–∑—É–ª—å—Ç–∞—Ç:* [${{ job.status }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            ${{ success() && '‚ñ´Ô∏è *–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:* [Download](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})' || '' }}
          parse_mode: markdown

      # 11. –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Miku-UI-Vampire_v3-${{ github.run_number }}
          path: out/target/product/blossom/*.zip
          retention-days: 3

      # 12. –û—á–∏—Å—Ç–∫–∞
      - name: Cleanup
        if: always()
        run: |
          sudo swapoff /swapfile || true
          sudo rm -f /swapfile || true
          ccache -s
